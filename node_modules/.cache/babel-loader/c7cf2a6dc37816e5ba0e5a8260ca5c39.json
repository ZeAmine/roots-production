{"ast":null,"code":"var _jsxFileName = \"/Users/elise/Desktop/roots-production/src/components/Mouse/Mouse.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Generate some dummy data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = Array.from({\n  length: 100\n}, (x, i) => {\n  return {\n    id: i,\n    title: `Item ${i}`\n  };\n});\n\nconst Mouse = () => {\n  _s();\n\n  const [progress, setProgress] = useState(0); // This function is triggered when the user scroll\n\n  const scrollHandler = event => {\n    const containerHeight = event.currentTarget.clientHeight;\n    const scrollHeight = event.currentTarget.scrollHeight;\n    const scrollTop = event.currentTarget.scrollTop;\n    setProgress((scrollTop + containerHeight) / scrollHeight * 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      onScroll: scrollHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.list,\n        children: DUMMY_DATA.map(item =>\n        /*#__PURE__*/\n        // A single item\n        _jsxDEV(\"div\", {\n          style: styles.item,\n          children: item.title\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.progressBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: { ...styles.progressValue,\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.text,\n      children: [progress.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // Styling\n\n\n_s(Mouse, \"MDavqfnVfXtrXQtLNoGNVIaRLCY=\");\n\n_c = Mouse;\nconst styles = {\n  container: {\n    width: 500,\n    height: 400,\n    margin: \"30px auto\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    background: \"orange\"\n  },\n  list: {\n    width: \"100%\"\n  },\n  item: {\n    margin: \"20px 25px\",\n    padding: \"30px 20px\",\n    boxShadow: \"0 2px 4px #999\",\n    background: \"purple\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    color: \"#fff\"\n  },\n  progressBar: {\n    width: 600,\n    height: 20,\n    margin: \"auto\",\n    backgroundColor: \"#bbb\"\n  },\n  progressValue: {\n    height: \"100%\",\n    backgroundColor: \"blue\"\n  },\n  text: {\n    textAlign: 'center'\n  }\n};\nexport default Mouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mouse\");","map":{"version":3,"sources":["/Users/elise/Desktop/roots-production/src/components/Mouse/Mouse.tsx"],"names":["React","useState","DUMMY_DATA","Array","from","length","x","i","id","title","Mouse","progress","setProgress","scrollHandler","event","containerHeight","currentTarget","clientHeight","scrollHeight","scrollTop","styles","container","list","map","item","progressBar","progressValue","width","text","toFixed","height","margin","overflowY","overflowX","background","padding","boxShadow","fontSize","textAlign","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// Generate some dummy data\nconst DUMMY_DATA = Array.from({ length: 100 }, (x, i) => {\n  return {\n    id: i,\n    title: `Item ${i}`,\n  };\n});\n\nconst Mouse: React.FunctionComponent = () => {\n  const [progress, setProgress] = useState(0);\n\n  // This function is triggered when the user scroll\n  const scrollHandler = (event: React.UIEvent<HTMLDivElement>) => {\n    const containerHeight = event.currentTarget.clientHeight;\n    const scrollHeight = event.currentTarget.scrollHeight;\n\n    const scrollTop = event.currentTarget.scrollTop;\n    setProgress(((scrollTop + containerHeight) / scrollHeight) * 100);\n  };\n\n  return (\n    <>\n      {/* The container */}\n      <div style={styles.container} onScroll={scrollHandler}>\n        {/* The list */}\n        <div style={styles.list}>\n          {DUMMY_DATA.map((item) => (\n            // A single item\n            <div style={styles.item} key={item.id}>\n              {item.title}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* The progress bar */}\n      <div style={styles.progressBar}>\n        <div style={{ ...styles.progressValue, width: `${progress}%` }}></div>\n      </div>\n      <p style={styles.text}>{progress.toFixed(2)}%</p>\n    </>\n  );\n};\n\n// Styling\nconst styles = {\n  container: {\n    width: 500,\n    height: 400,\n    margin: \"30px auto\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    background: \"orange\",\n  },\n  list: {\n    width: \"100%\",\n  },\n  item: {\n    margin: \"20px 25px\",\n    padding: \"30px 20px\",\n    boxShadow: \"0 2px 4px #999\",\n    background: \"purple\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    color: \"#fff\",\n  },\n  progressBar: {\n    width: 600,\n    height: 20,\n    margin: \"auto\",\n    backgroundColor: \"#bbb\",\n  },\n  progressValue: {\n    height: \"100%\",\n    backgroundColor: \"blue\",\n  },\n  text: {\n    textAlign: 'center'\n  }\n} as const;\n\nexport default Mouse;"]},"metadata":{},"sourceType":"module"}